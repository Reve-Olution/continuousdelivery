apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'pkg-debian'

sourceCompatibility = 1.8
version = '1.0'

def mavenUser = 'admin';
def mavenPassword = '****'
def mavenSnapshots =  "http://***/archiva/repository/snapshots"
def mavenInternal =  "http://***/archiva/repository/internal"
def mavenOSS = "https://oss.sonatype.org/content/groups/staging"

jar {
	from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
    manifest {
        attributes 'Implementation-Title': 'Chalets Application', 
        			'Implementation-Version': version,
        			'Main-Class' : 'ch.waterbead.server.DropWizardService'
    }
}	

configurations {
	sshAntTask
}

repositories {
    maven {
    	name "snapshots"
        url mavenSnapshots
    	credentials {
            username  mavenUser
            password mavenPassword
        }
    }
    maven {
        url mavenInternal
    	credentials {
            username mavenUser
            password mavenPassword
        }
    }
    maven {
    	url mavenOSS
    }
    maven {
      url "http://dl.bintray.com/gesellix/gradle-plugins"
    }
}

sourceSets {
    intTest {
    	java {
    		srcDir 'src/it/java'
    	}
    	compileClasspath += sourceSets.main.runtimeClasspath
    	runtimeClasspath += sourceSets.main.runtimeClasspath
    }
}

dependencies {
    compile project(':common')
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile group: 'com.yammer.dropwizard', name: 'dropwizard-core', version: '0.6.2'
    compile group: 'org.liquibase', name: 'liquibase-core', version: '2.0.3'
    compile group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.5.1'
    compile 'org.jumpmind.symmetric.jdbc:mariadb-java-client:1.1.1'
    
    testCompile group: 'junit', name: 'junit', version: '4.+'
    
    intTestCompile group: 'junit', name: 'junit', version: '4.+'
    
    sshAntTask 'org.apache.ant:ant-jsch:1.7.1', 'jsch:jsch:0.1.29'
}

buildscript {
  repositories {
    maven {
      url "http://dl.bintray.com/gesellix/gradle-plugins"
    }
    mavenCentral()
    mavenLocal()
  }
  dependencies {
    classpath "de.gesellix:gradle-debian-plugin:14"
  }
}

uploadArchives {
    initProjectVersion();
    repositories.mavenDeployer {
		repository(url: mavenSnapshots) {
			authentication(userName: mavenUser, password: mavenPassword)
		}
        pom.artifactId = 'lescrosets'
        pom.groupId= 'ch.waterbead'
    }
}

/* Définition d'une tâche lancant le package de tests d'intégration
*  Redifinition du classPath afin de lancer les tests d'intégration et non pas ceux
* par défaut.
*/
task integrationTest(type : Test) {
	testClassesDir = sourceSets.intTest.output.classesDir
    classpath = sourceSets.intTest.runtimeClasspath
}

/* Récupération de la verison depuis le fichier de properties */
def initProjectVersion() {
	Properties versionProps = getVersionProps();
	project.version = versionProps.version;
}

/* Incrémentation du numéro de version */
def increaseVersion() {
	File versionFile = getVersionFile();
	Properties versionProps = getVersionProps();
    Integer version = versionProps.version.toInteger()
    println version
    version++
    
    ant.propertyfile(file : versionFile) {
    	entry(key: "version", value: version)
    }
}

/* Retourne un objet Properties à partir du fichier "version.properties" */
def getVersionProps() {
	File versionFile = getVersionFile();
	Properties versionProps = new Properties()

    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }
    return versionProps;
}

/* Retourne le fichier qui représente la verison */
def getVersionFile() {
	File versionFile = file('version.properties');
}

debian {
  packagename = "chalets"
  publications = ['webapp']
  controlDirectory = "../packager"
  changelogFile = "../packager/changelog"
  
  data {
  	def baseDir = "..";
  	file {
  		name = "${baseDir}/chalets/build/libs/chalets-"+project.version+".jar"
  		target= "/srv/chalets/chalets-"+project.version+".jar"
  		mapper {
  			fileMode = "755"
  		}
  	}
  	dir {
  		name = "${baseDir}/chalets-web"
		mapper {
			filename = {path -> "/var/www/html/" + path}
		}
	}
	dir {
  		name = "${baseDir}/database"
		mapper {
			filename = {path -> "/tmp/chalets/" + path}
			fileMode = "755"
		}
	}
  }
}

task uploadDebian << {
	initProjectVersion();
	ant.taskdef(name: 'scp', classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
							classpath: configurations.sshAntTask.asPath)
	
	ant.scp(todir: '***@***:/var/www/debianPackages',
			trust : 'true',
			password : '***',
			verbose : 'true') {
		fileset(dir: './build') {
			include(name : 'chalets-'+project.version+'.deb')
		}
	}
	
	increaseVersion();
}
